version: '3.8'

services:
  dispatcher:
    build: ./dispatcher
    container_name: webhook_dispatcher
    ports:
      - 3000
    environment:
      VERIFY_TOKEN: ${VERIFY_TOKEN}
      REDIS_URL: redis://:RealUnited93@redis:6379
    depends_on:
      - redis
    restart: always
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.dispatcher.rule=Host(`webhook.moviatech.com.mx`)
      - traefik.http.routers.dispatcher.entrypoints=websecure
      - traefik.http.routers.dispatcher.tls.certResolver=letsencrypt
      - traefik.http.services.dispatcher.loadbalancer.server.port=3000

  worker:
    build: ./worker
    container_name: webhook_worker
    environment:
      REDIS_URL: redis://:RealUnited93@redis:6379
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - redis
    restart: always
    networks:
      - dokploy-network
      
  non_message_worker:
    build: ./non_message_worker
    container_name: nonmessage_worker
    environment:
      REDIS_URL: redis://:RealUnited93@redis:6379
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - redis
    restart: always
    networks:
      - dokploy-network
      
  redis:
    image: redis:alpine
    container_name: redis_queue
    command: ["redis-server", "--requirepass", "RealUnited93"]
    ports:
      - "6379:6379"
    restart: always
    networks:
      - dokploy-network

networks:
  dokploy-network:
    external: true
